Newspeak3
'Benchmarks'
class BenchmarkRunner packageUsing: ns = (
(*Infrastructure to run a set of benchmarks and gather average run times.

Copyright 2012 Google Inc.
Copyright 2013 Ryan Macnak

Licensed under the Apache License, Version 2.0 (the ''License''); you may not use this file except in compliance with the License.  You may obtain a copy of the License at  http://www.apache.org/licenses/LICENSE-2.0*)|
	benchmarks = {
		ns ClosureDefFibonacci.
		ns ClosureFibonacci.
		ns DeltaBlue.
		ns MethodFibonacci.
		ns NLRImmediate.
		ns NLRLoop.
		ns ParserCombinators.
		ns Richards.		
		ns SlotRead.
		ns SlotWrite.
		ns Splay.
	}.
|)
(
class Benchmarking usingPlatform: p = (|
private Time = p time Time.
private List = p collections OrderedCollection.
private cachedPlatform = p.
|)
('as yet unclassified'
measure: block forAtLeast: milliseconds = (
	| runs start elapsed score |
	runs:: 0.
	start:: Time millisecondClockValue.
	
	[block value.
	runs:: runs + 1.
	elapsed:: Time millisecondClockValue - start.
	elapsed < milliseconds] whileTrue.
	
	score:: (round: runs * 1000.0 / elapsed to: 0.1) asFloat.
	^score printString
)
public report = (
	benchmarks do: [:benchmark |
		| b score |
		b:: benchmark usingPlatform: cachedPlatform.

		self measure: [b bench] forAtLeast: 300.
		score:: measure: [b bench] forAtLeast: 2000.
		(benchmark name, ': ', score) out.
	].

)
round: n to: quantum = (
	^(n // quantum) * quantum
)) : ()'as yet unclassified'
public main: p args: argv = (
	(Benchmarking usingPlatform: p) report
)) : ()